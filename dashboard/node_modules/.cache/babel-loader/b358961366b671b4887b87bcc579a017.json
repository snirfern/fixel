{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\fixel\\\\dashboard\\\\src\\\\Components\\\\UserProfile\\\\UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./UserProfile.css\";\nimport { useStore } from \"../../Store/Store\";\nimport { profileUpdate } from \"../../Store/Actions\";\nimport { Icon } from \"react-icons-kit\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport { edit } from \"react-icons-kit/feather/edit\";\nconst defaultProfileImage = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR6Q82WISxpWPp5dHBTWHypFOZbRTvc0ST0xQ&usqp=CAU\";\nexport default function UserProfile(props) {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useStore();\n  const {\n    user\n  } = state;\n  const [isEdit, setIsEdit] = useState(false);\n  const [userUploadData, setUserUploadData] = useState({\n    file: null,\n    bio: null\n  });\n  const isUploadReady = userUploadData.file === null && userUploadData.bio === null ? false : true;\n\n  async function handleImageChange(e) {\n    return new Promise(resolve => {\n      let reader = new FileReader();\n      let file = userUploadData.file;\n\n      reader.onloadend = () => {\n        //dispatch({ type: \"UPDATE_USER_DATA\", payload: reader.result });\n        setIsEdit(false);\n        resolve(reader.result);\n      };\n\n      if (file) reader.readAsDataURL(file);\n    });\n  }\n\n  async function handleProfileUpdate() {\n    if (userUploadData.bio === null) userUploadData.bio = state.user.bio;\n    let base64Img = null;\n    if (userUploadData.file) base64Img = await handleImageChange();\n    profileUpdate({ ...userUploadData,\n      file: base64Img ? base64Img : state.user.profile_img\n    }, state.user.email);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user_profile_container\",\n    children: [user && user.full_name && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user_welcome\",\n      children: [\"Welcome\\xA0\", user.full_name && user.full_name.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image_edit_icon\",\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        icon: edit,\n        onClick: () => setIsEdit(!isEdit)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_image_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"user_image\",\n          alt: \"user image\",\n          src: state.user.profile_img || defaultProfileImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file_upload\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), isEdit && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => {\n              let newFile = e.target.files;\n              if (newFile.length > 0 && newFile[0].size && newFile[0].type.toString().indexOf(\"image\") > -1) setUserUploadData({ ...userUploadData,\n                file: newFile[0]\n              });else dispatch({\n                type: \"ERROR\",\n                payload: {\n                  type: \"Incorrect file type\",\n                  msg: \"Uploaded file is wrong. please reupload\"\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_bio\",\n        children: [isEdit && /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"user_profile_text_area\",\n          onChange: e => setUserUploadData({ ...userUploadData,\n            bio: e.target.value\n          }),\n          children: \"your bio here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), !isEdit && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_bio\",\n          children: user && user.profile_bio ? user.profile_bio : \"your bio here..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      disabled: isUploadReady,\n      text: \"Submit\",\n      onClick: () => {\n        handleProfileUpdate();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProfile, \"v4dIWzOS/bkvGKvGw8f9HOQbGQw=\", false, function () {\n  return [useStore];\n});\n\n_c = UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["D:/fixel/dashboard/src/Components/UserProfile/UserProfile.js"],"names":["React","useState","useStore","profileUpdate","Icon","CustomButton","edit","defaultProfileImage","UserProfile","props","state","dispatch","user","isEdit","setIsEdit","userUploadData","setUserUploadData","file","bio","isUploadReady","handleImageChange","e","Promise","resolve","reader","FileReader","onloadend","result","readAsDataURL","handleProfileUpdate","base64Img","profile_img","email","full_name","toString","newFile","target","files","length","size","type","indexOf","payload","msg","value","profile_bio"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./UserProfile.css\";\r\nimport { useStore } from \"../../Store/Store\";\r\nimport { profileUpdate } from \"../../Store/Actions\";\r\nimport { Icon } from \"react-icons-kit\";\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\nimport { edit } from \"react-icons-kit/feather/edit\";\r\n\r\nconst defaultProfileImage =\r\n  \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR6Q82WISxpWPp5dHBTWHypFOZbRTvc0ST0xQ&usqp=CAU\";\r\n\r\nexport default function UserProfile(props) {\r\n  const { state, dispatch } = useStore();\r\n  const { user } = state;\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [userUploadData, setUserUploadData] = useState({\r\n    file: null,\r\n    bio: null,\r\n  });\r\n\r\n  const isUploadReady =\r\n    userUploadData.file === null && userUploadData.bio === null ? false : true;\r\n\r\n  async function handleImageChange(e) {\r\n    return new Promise((resolve) => {\r\n      let reader = new FileReader();\r\n      let file = userUploadData.file;\r\n\r\n      reader.onloadend = () => {\r\n        //dispatch({ type: \"UPDATE_USER_DATA\", payload: reader.result });\r\n        setIsEdit(false);\r\n        resolve(reader.result);\r\n      };\r\n      if (file) reader.readAsDataURL(file);\r\n    });\r\n  }\r\n  async function handleProfileUpdate() {\r\n    if (userUploadData.bio === null) userUploadData.bio = state.user.bio;\r\n    let base64Img = null;\r\n    if (userUploadData.file) base64Img = await handleImageChange();\r\n\r\n    profileUpdate(\r\n      {\r\n        ...userUploadData,\r\n        file: base64Img ? base64Img : state.user.profile_img,\r\n      },\r\n      state.user.email\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"user_profile_container\">\r\n      {user && user.full_name && (\r\n        <div className=\"user_welcome\">\r\n          Welcome&nbsp;{user.full_name && user.full_name.toString()}\r\n        </div>\r\n      )}\r\n      <div className=\"image_edit_icon\">\r\n        <Icon icon={edit} onClick={() => setIsEdit(!isEdit)} />\r\n      </div>\r\n      <div>\r\n        <div className=\"user_image_container\">\r\n          <img\r\n            className=\"user_image\"\r\n            alt=\"user image\"\r\n            src={state.user.profile_img || defaultProfileImage}\r\n          />\r\n          <div className=\"file_upload\">\r\n            <br />\r\n            {isEdit && (\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  let newFile = e.target.files;\r\n\r\n                  if (\r\n                    newFile.length > 0 &&\r\n                    newFile[0].size &&\r\n                    newFile[0].type.toString().indexOf(\"image\") > -1\r\n                  )\r\n                    setUserUploadData({ ...userUploadData, file: newFile[0] });\r\n                  else\r\n                    dispatch({\r\n                      type: \"ERROR\",\r\n                      payload: {\r\n                        type: \"Incorrect file type\",\r\n                        msg: \"Uploaded file is wrong. please reupload\",\r\n                      },\r\n                    });\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>{\" \"}\r\n        <br />\r\n        <br />\r\n        <div className=\"user_bio\">\r\n          {isEdit && (\r\n            <textarea\r\n              className=\"user_profile_text_area\"\r\n              onChange={(e) =>\r\n                setUserUploadData({ ...userUploadData, bio: e.target.value })\r\n              }\r\n            >\r\n              your bio here...\r\n            </textarea>\r\n          )}\r\n          {!isEdit && (\r\n            <div className=\"user_bio\">\r\n              {user && user.profile_bio ? user.profile_bio : \"your bio here..\"}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <CustomButton\r\n        disabled={isUploadReady}\r\n        text=\"Submit\"\r\n        onClick={() => {\r\n          handleProfileUpdate();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}