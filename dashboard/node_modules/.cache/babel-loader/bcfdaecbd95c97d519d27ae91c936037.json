{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\fixel\\\\dashboard\\\\src\\\\Store\\\\Store.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from \"react\";\nconst StoreContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: {\n    full_name: \"snir fern\",\n    email: \"snir.snir@gmail.com\",\n    bio: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque laoreet justo vitae eleifend elementum. In auctor sem eu libero mattis, facilisis vulputate eros lacinia. Etiam diam nisi, pellentesque non gravida in, dictum a nulla. Etiam id magna enim. Donec quis auctor felis. Cras ornare libero convallis diam sollicitudin, in porta justo varius. Suspendisse vestibulum quam vel neque gravida, sit amet varius justo interdum. Etiam consequat efficitur ligula id porttitor. Aliquam erat volutpat.Nunc sed molestie quam. Curabitur volutpat, ipsum nec fermentum ornare, leo lorem sodales leo, iaculis posuere nibh lacus id enim. Etiam vitae augue pulvinar, tincidunt magna eget, condimentum leo. Mauris aliquet ut ex ut ultrices. Sed gravida egestas lectus quis vulputate. Aliquam erat volutpat. Curabitur vestibulum, arcu non ullamcorper pharetra, tortor felis hendrerit magna, vel aliquam metus ligula id nisl. Vestibulum aliquet urna et maximus ornare. Sed congue lorem in lorem rhoncus, eget luctus massa fermentum. Maecenas fringilla eros in lacinia dictum.\"\n  },\n  globalError: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"USER_EMAIL\":\n      {\n        return { ...state\n        };\n      }\n\n    case \"ERROR\":\n      {\n        const {\n          payload\n        } = action;\n        if (!payload || payload < 0) return { ...state,\n          globalError: null\n        };\n        return { ...state,\n          globalError: payload\n        };\n      }\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n\nexport const StoreProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StoreProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = StoreProvider;\nexport const useStore = () => {\n  _s2();\n\n  return useContext(StoreContext);\n};\n\n_s2(useStore, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"sources":["D:/fixel/dashboard/src/Store/Store.js"],"names":["React","createContext","useContext","useReducer","StoreContext","initialState","user","full_name","email","bio","globalError","reducer","state","action","type","payload","Error","StoreProvider","children","dispatch","useStore"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;AACA,MAAMI,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,WADP;AAEJC,IAAAA,KAAK,EAAE,qBAFH;AAGJC,IAAAA,GAAG,EACD;AAJE,GADa;AAOnBC,EAAAA,WAAW,EAAE;AAPM,CAArB;;AAUA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AAAmB;AACjB,eAAO,EAAE,GAAGF;AAAL,SAAP;AACD;;AACD,SAAK,OAAL;AAAc;AACZ,cAAM;AAAEG,UAAAA;AAAF,YAAcF,MAApB;AAEA,YAAI,CAACE,OAAD,IAAYA,OAAO,GAAG,CAA1B,EAA6B,OAAO,EAAE,GAAGH,KAAL;AAAYF,UAAAA,WAAW,EAAE;AAAzB,SAAP;AAC7B,eAAO,EACL,GAAGE,KADE;AAELF,UAAAA,WAAW,EAAEK;AAFR,SAAP;AAID;;AACD;AACE,YAAM,IAAIC,KAAJ,CAAW,0BAAyBH,MAAM,CAACC,IAAK,EAAhD,CAAN;AAdJ;AAgBD,CAjBD;;AAmBA,OAAO,MAAMG,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7C,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBhB,UAAU,CAACQ,OAAD,EAAUN,YAAV,CAApC;AAEA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAF;AAASO,MAAAA;AAAT,KAA9B;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARM;;GAAMD,a;;KAAAA,a;AAUb,OAAO,MAAMG,QAAQ,GAAG;AAAA;;AAAA,SAAMlB,UAAU,CAACE,YAAD,CAAhB;AAAA,CAAjB;;IAAMgB,Q","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\nconst StoreContext = createContext();\r\nconst initialState = {\r\n  user: {\r\n    full_name: \"snir fern\",\r\n    email: \"snir.snir@gmail.com\",\r\n    bio:\r\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque laoreet justo vitae eleifend elementum. In auctor sem eu libero mattis, facilisis vulputate eros lacinia. Etiam diam nisi, pellentesque non gravida in, dictum a nulla. Etiam id magna enim. Donec quis auctor felis. Cras ornare libero convallis diam sollicitudin, in porta justo varius. Suspendisse vestibulum quam vel neque gravida, sit amet varius justo interdum. Etiam consequat efficitur ligula id porttitor. Aliquam erat volutpat.Nunc sed molestie quam. Curabitur volutpat, ipsum nec fermentum ornare, leo lorem sodales leo, iaculis posuere nibh lacus id enim. Etiam vitae augue pulvinar, tincidunt magna eget, condimentum leo. Mauris aliquet ut ex ut ultrices. Sed gravida egestas lectus quis vulputate. Aliquam erat volutpat. Curabitur vestibulum, arcu non ullamcorper pharetra, tortor felis hendrerit magna, vel aliquam metus ligula id nisl. Vestibulum aliquet urna et maximus ornare. Sed congue lorem in lorem rhoncus, eget luctus massa fermentum. Maecenas fringilla eros in lacinia dictum.\",\r\n  },\r\n  globalError: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"USER_EMAIL\": {\r\n      return { ...state };\r\n    }\r\n    case \"ERROR\": {\r\n      const { payload } = action;\r\n\r\n      if (!payload || payload < 0) return { ...state, globalError: null };\r\n      return {\r\n        ...state,\r\n        globalError: payload,\r\n      };\r\n    }\r\n    default:\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n  }\r\n};\r\n\r\nexport const StoreProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <StoreContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </StoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useStore = () => useContext(StoreContext);\r\n"]},"metadata":{},"sourceType":"module"}