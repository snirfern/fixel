{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\fixel\\\\dashboard\\\\src\\\\Components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Form.css\";\nimport CustomInput from \"../CustomInput/CustomInput\";\nimport CustomButton from \"../CustomButton/CustomButton\";\n\nfunction validate({\n  elements,\n  values\n}) {\n  let errors = {};\n  if (elements) elements.forEach(cI => {\n    if (values[cI.id] && !cI.validate(values[cI.id])) {\n      errors[cI.id] = cI.errorMsg;\n    }\n  });\n  return errors;\n}\n\nexport default function Form({\n  elements,\n  fields,\n  formTitle,\n  formLogo,\n  submitText,\n  onSubmit\n}) {\n  _s();\n\n  const [values, setValues] = React.useState(fields);\n  const errors = validate(elements, values);\n  const isValidForm = Object.keys(errors).length === 0 && Object.keys(values).every(v => values[v].toString() !== \"\");\n  let markUp = !elements || elements.length === 0 ? [] : elements.map((cF, i) => {\n    if (cF.type && cF.type === \"input\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_input\",\n      children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n        keyProp: \"custom_input_\" + i,\n        title: cF.title || \"\",\n        onChange: v => {\n          setValues({ ...values,\n            [cF.id]: v\n          });\n        },\n        valueIn: values && values[cF.id] ? values[cF.id] : \"\",\n        errorMsg: values[cF.id] && values[cF.id].length > 0 && errors[cF.id] !== undefined && errors[cF.id],\n        icon: cF.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, \"form_input_\" + i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }, this);else return null;\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: !isValidForm ? \"form_logo\" : \"form_logo_rotate\",\n      children: formLogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form_title\",\n      children: formTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), markUp, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit_button\",\n      children: /*#__PURE__*/_jsxDEV(CustomButton, {\n        onClick: () => {\n          if (onSubmit) onSubmit(values);\n        } //disabled={isValidForm}\n        ,\n        text: submitText || \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"lLjASIV+d6YYMf0P6f8UXY883TU=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/fixel/dashboard/src/Components/Form/Form.js"],"names":["React","CustomInput","CustomButton","validate","elements","values","errors","forEach","cI","id","errorMsg","Form","fields","formTitle","formLogo","submitText","onSubmit","setValues","useState","isValidForm","Object","keys","length","every","v","toString","markUp","map","cF","i","type","title","undefined","icon"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./Form.css\";\r\nimport CustomInput from \"../CustomInput/CustomInput\";\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\nfunction validate({ elements, values }) {\r\n  let errors = {};\r\n  if (elements)\r\n    elements.forEach((cI) => {\r\n      if (values[cI.id] && !cI.validate(values[cI.id])) {\r\n        errors[cI.id] = cI.errorMsg;\r\n      }\r\n    });\r\n\r\n  return errors;\r\n}\r\nexport default function Form({\r\n  elements,\r\n  fields,\r\n  formTitle,\r\n  formLogo,\r\n  submitText,\r\n  onSubmit,\r\n}) {\r\n  const [values, setValues] = React.useState(fields);\r\n  const errors = validate(elements, values);\r\n  const isValidForm =\r\n    Object.keys(errors).length === 0 &&\r\n    Object.keys(values).every((v) => values[v].toString() !== \"\");\r\n\r\n  let markUp =\r\n    !elements || elements.length === 0\r\n      ? []\r\n      : elements.map((cF, i) => {\r\n          if (cF.type && cF.type === \"input\")\r\n            return (\r\n              <div className=\"form_input\" key={\"form_input_\" + i}>\r\n                <CustomInput\r\n                  keyProp={\"custom_input_\" + i}\r\n                  title={cF.title || \"\"}\r\n                  onChange={(v) => {\r\n                    setValues({ ...values, [cF.id]: v });\r\n                  }}\r\n                  valueIn={values && values[cF.id] ? values[cF.id] : \"\"}\r\n                  errorMsg={\r\n                    values[cF.id] &&\r\n                    values[cF.id].length > 0 &&\r\n                    errors[cF.id] !== undefined &&\r\n                    errors[cF.id]\r\n                  }\r\n                  icon={cF.icon}\r\n                />{\" \"}\r\n                <br />\r\n              </div>\r\n            );\r\n          else return null;\r\n        });\r\n\r\n  return (\r\n    <form>\r\n      <div className={!isValidForm ? \"form_logo\" : \"form_logo_rotate\"}>\r\n        {formLogo}\r\n      </div>\r\n      <h1 className=\"form_title\">{formTitle}</h1>\r\n      <br />\r\n      {markUp}\r\n      <br />\r\n      <div className=\"submit_button\">\r\n        <CustomButton\r\n          onClick={() => {\r\n            if (onSubmit) onSubmit(values);\r\n          }}\r\n          //disabled={isValidForm}\r\n          text={submitText || \"Submit\"}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}