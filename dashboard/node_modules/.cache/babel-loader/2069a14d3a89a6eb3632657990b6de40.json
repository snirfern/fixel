{"ast":null,"code":"import axios from \"../AxiosConfig/AxiosConfig\";\nexport const confirmCode = async function (code, email, dispatch) {\n  let url = \"codeConfirm?user_confirmation_code=\" + code + \"&email=\" + email;\n  return new Promise(resolve => {\n    axios({\n      method: \"GET\",\n      url: url,\n      json: true\n    }).then(res => {\n      if (res && res.data && res.data.success && res.data.success > 0) {\n        resolve(1);\n        dispatch({\n          type: \"LOADING\",\n          payload: false\n        });\n      } else if (res && res.data && res.data.success < 0) dispatch({\n        type: \"ERROR\",\n        payload: {\n          type: \"Wrong data\",\n          msg: res.data.msg\n        }\n      });\n\n      resolve(-1);\n    }).catch(e => {\n      dispatch({\n        type: \"ERROR\",\n        payload: {\n          type: \"Some error occured\",\n          msg: e\n        }\n      });\n      resolve(-1);\n    });\n  });\n};\nexport const Login = async function (values, dispatch) {\n  return new Promise(resolve => {\n    axios({\n      method: \"POST\",\n      url: \"login\",\n      data: values\n    }).then(res => {\n      if (res && res.data && res.data.success) {\n        dispatch({\n          type: \"LOGIN\",\n          payload: {\n            email: values.email,\n            ...res.data.data\n          }\n        });\n\n        if (res.data && res.data.status && res.data.status > 0) {\n          resolve(1);\n        } else {\n          dispatch({\n            type: \"LOADING\",\n            payload: false\n          });\n          resolve(-2);\n        }\n\n        return;\n      }\n\n      resolve(-1);\n    }).catch(e => {\n      dispatch({\n        type: \"ERROR\",\n        payload: e\n      });\n    });\n  });\n};\n_c = Login;\nexport const signUp = async function (values, dispatch) {\n  return new Promise((resolve, reject) => {\n    axios({\n      method: \"POST\",\n      url: \"signUp\",\n      data: values,\n      json: true\n    }).then(res => {\n      if (res && res.data && res.data.success && res.data.success > 0) {\n        resolve(1);\n        dispatch({\n          type: \"SIGNUP\",\n          payload: values\n        });\n      }\n    }).catch(e => {\n      dispatch({\n        type: \"LOADING\",\n        payload: false\n      });\n      dispatch({\n        type: \"ERROR\",\n        payload: e\n      });\n      reject(-1);\n    });\n  });\n};\nexport const profileUpdate = async function (userUploadData, email) {\n  const formData = new FormData();\n  if (userUploadData.file) formData.append(\"profile_image\", userUploadData.file);\n  if (userUploadData.bio) formData.append(\"profile_bio\", userUploadData.bio);\n  if (email) formData.append(\"email\", email);\n  axios({\n    method: \"POST\",\n    url: \"updateUserDetails\",\n    data: formData,\n    json: true\n  }).then(res => {\n    console.log(res.data);\n  }).catch(e => {//dispatch({ type: \"ERROR\", payload: e });\n  });\n};\nexport const getSome = async function () {\n  axios({\n    method: \"GET\",\n    url: \"/t\"\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/fixel/dashboard/src/Store/Actions.js"],"names":["axios","confirmCode","code","email","dispatch","url","Promise","resolve","method","json","then","res","data","success","type","payload","msg","catch","e","Login","values","status","signUp","reject","profileUpdate","userUploadData","formData","FormData","file","append","bio","console","log","getSome"],"mappings":"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","sourcesContent":["import axios from \"../AxiosConfig/AxiosConfig\";\r\n\r\nexport const confirmCode = async function (code, email, dispatch) {\r\n  let url = \"codeConfirm?user_confirmation_code=\" + code + \"&email=\" + email;\r\n\r\n  return new Promise((resolve) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: url,\r\n      json: true,\r\n    })\r\n      .then((res) => {\r\n        if (res && res.data && res.data.success && res.data.success > 0) {\r\n          resolve(1);\r\n          dispatch({ type: \"LOADING\", payload: false });\r\n        } else if (res && res.data && res.data.success < 0)\r\n          dispatch({\r\n            type: \"ERROR\",\r\n            payload: { type: \"Wrong data\", msg: res.data.msg },\r\n          });\r\n        resolve(-1);\r\n      })\r\n      .catch((e) => {\r\n        dispatch({\r\n          type: \"ERROR\",\r\n          payload: { type: \"Some error occured\", msg: e },\r\n        });\r\n        resolve(-1);\r\n      });\r\n  });\r\n};\r\nexport const Login = async function (values, dispatch) {\r\n  return new Promise((resolve) => {\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"login\",\r\n      data: values,\r\n    })\r\n      .then((res) => {\r\n        if (res && res.data && res.data.success) {\r\n          dispatch({\r\n            type: \"LOGIN\",\r\n            payload: { email: values.email, ...res.data.data },\r\n          });\r\n          if (res.data && res.data.status && res.data.status > 0) {\r\n            resolve(1);\r\n          } else {\r\n            dispatch({ type: \"LOADING\", payload: false });\r\n            resolve(-2);\r\n          }\r\n          return;\r\n        }\r\n        resolve(-1);\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: \"ERROR\", payload: e });\r\n      });\r\n  });\r\n};\r\n\r\nexport const signUp = async function (values, dispatch) {\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"signUp\",\r\n      data: values,\r\n      json: true,\r\n    })\r\n      .then((res) => {\r\n        if (res && res.data && res.data.success && res.data.success > 0) {\r\n          resolve(1);\r\n          dispatch({ type: \"SIGNUP\", payload: values });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: \"LOADING\", payload: false });\r\n        dispatch({ type: \"ERROR\", payload: e });\r\n        reject(-1);\r\n      });\r\n  });\r\n};\r\n\r\nexport const profileUpdate = async function (userUploadData, email) {\r\n  const formData = new FormData();\r\n  if (userUploadData.file)\r\n    formData.append(\"profile_image\", userUploadData.file);\r\n  if (userUploadData.bio) formData.append(\"profile_bio\", userUploadData.bio);\r\n  if (email) formData.append(\"email\", email);\r\n\r\n  axios({\r\n    method: \"POST\",\r\n    url: \"updateUserDetails\",\r\n    data: formData,\r\n    json: true,\r\n  })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n    })\r\n    .catch((e) => {\r\n      //dispatch({ type: \"ERROR\", payload: e });\r\n    });\r\n};\r\n\r\nexport const getSome = async function () {\r\n  axios({\r\n    method: \"GET\",\r\n    url: \"/t\",\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}