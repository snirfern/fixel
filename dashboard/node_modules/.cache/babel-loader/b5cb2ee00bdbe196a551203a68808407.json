{"ast":null,"code":"import axios from \"../AxiosConfig/AxiosConfig\";\nexport const confirmCode = async function (code, email, dispatch) {\n  let url = \"codeConfirm?user_confirmaton_code=\" + code;\n  return new Promise(resolve => {\n    axios({\n      method: \"GET\",\n      url: url\n    }).then(res => {\n      if (res && res.data && res.data.success) {\n        resolve(1);\n      }\n    }).catch(e => {\n      dispatch({\n        type: \"ERROR\",\n        payload: e\n      });\n      resolve(-1);\n    });\n  });\n};\nexport const Login = async function (values, dispatch) {\n  return new Promise(resolve => {\n    axios({\n      method: \"POST\",\n      url: \"login\",\n      data: values\n    }).then(res => {\n      if (res && res.data && res.data.success) {\n        dispatch({\n          type: \"LOGIN\",\n          payload: {\n            email: values.email\n          }\n        });\n\n        if (res.data && res.data.status && res.data.status > 0) {\n          resolve(1);\n        } else {\n          dispatch({\n            type: \"LOADING\",\n            payload: false\n          });\n          resolve(-2);\n        }\n\n        return;\n      }\n\n      resolve(-1);\n    }).catch(e => {\n      dispatch({\n        type: \"ERROR\",\n        payload: e\n      });\n    });\n  });\n};\n_c = Login;\nexport const signUp = async function (values, email, dispatch) {\n  return new Promise((resolve, reject) => {\n    axios({\n      method: \"POST\",\n      url: \"signUp\",\n      data: values,\n      json: true\n    }).then(res => {\n      if (res && res.data && res.data.success) resolve(1);\n      dispatch({\n        type: \"SIGNUP\",\n        payload: values\n      });\n    }).catch(e => {\n      reject(-1);\n      dispatch({\n        type: \"LOADING\",\n        payload: false\n      });\n      dispatch({\n        type: \"ERROR\",\n        payload: e\n      });\n    });\n  });\n};\nexport const profileUpdate = async function (userUploadData) {\n  const formData = new FormData();\n  if (userUploadData.file) formData.append(\"profile_image\", userUploadData.file);\n  if (userUploadData.bio) formData.append(\"profile_bio\", userUploadData.bio);\n  axios({\n    method: \"POST\",\n    url: \"updateUserDetails\",\n    data: formData,\n    json: true\n  }).then(res => {\n    console.log(res.data);\n  }).catch(e => {//dispatch({ type: \"ERROR\", payload: e });\n  });\n};\nexport const getSome = async function () {\n  axios({\n    method: \"GET\",\n    url: \"/t\"\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/fixel/dashboard/src/Store/Actions.js"],"names":["axios","confirmCode","code","email","dispatch","url","Promise","resolve","method","then","res","data","success","catch","e","type","payload","Login","values","status","signUp","reject","json","profileUpdate","userUploadData","formData","FormData","file","append","bio","console","log","getSome"],"mappings":"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","sourcesContent":["import axios from \"../AxiosConfig/AxiosConfig\";\r\n\r\nexport const confirmCode = async function (code, email, dispatch) {\r\n  let url = \"codeConfirm?user_confirmaton_code=\" + code;\r\n\r\n  return new Promise((resolve) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: url,\r\n    })\r\n      .then((res) => {\r\n        if (res && res.data && res.data.success) {\r\n          resolve(1);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: \"ERROR\", payload: e });\r\n        resolve(-1);\r\n      });\r\n  });\r\n};\r\nexport const Login = async function (values, dispatch) {\r\n  return new Promise((resolve) => {\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"login\",\r\n      data: values,\r\n    })\r\n      .then((res) => {\r\n        if (res && res.data && res.data.success) {\r\n          dispatch({ type: \"LOGIN\", payload: { email: values.email } });\r\n          if (res.data && res.data.status && res.data.status > 0) {\r\n            resolve(1);\r\n          } else {\r\n            dispatch({ type: \"LOADING\", payload: false });\r\n            resolve(-2);\r\n          }\r\n          return;\r\n        }\r\n        resolve(-1);\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: \"ERROR\", payload: e });\r\n      });\r\n  });\r\n};\r\n\r\nexport const signUp = async function (values, email, dispatch) {\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"signUp\",\r\n      data: values,\r\n      json: true,\r\n    })\r\n      .then((res) => {\r\n        if (res && res.data && res.data.success) resolve(1);\r\n        dispatch({ type: \"SIGNUP\", payload: values });\r\n      })\r\n      .catch((e) => {\r\n        reject(-1);\r\n        dispatch({ type: \"LOADING\", payload: false });\r\n        dispatch({ type: \"ERROR\", payload: e });\r\n      });\r\n  });\r\n};\r\n\r\nexport const profileUpdate = async function (userUploadData) {\r\n  const formData = new FormData();\r\n  if (userUploadData.file)\r\n    formData.append(\"profile_image\", userUploadData.file);\r\n  if (userUploadData.bio) formData.append(\"profile_bio\", userUploadData.bio);\r\n\r\n  axios({\r\n    method: \"POST\",\r\n    url: \"updateUserDetails\",\r\n    data: formData,\r\n    json: true,\r\n  })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n    })\r\n    .catch((e) => {\r\n      //dispatch({ type: \"ERROR\", payload: e });\r\n    });\r\n};\r\n\r\nexport const getSome = async function () {\r\n  axios({\r\n    method: \"GET\",\r\n    url: \"/t\",\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}