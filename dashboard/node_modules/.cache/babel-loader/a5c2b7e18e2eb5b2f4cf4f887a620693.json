{"ast":null,"code":"import axios from \"../AxiosConfig/AxiosConfig\";\nexport const Login = async function (values, dispatch) {\n  axios({\n    method: \"POST\",\n    url: \"login\",\n    data: {\n      details: values\n    }\n  }).then(res => {\n    if (res && res.data && res.data.full_name) {\n      dispatch({\n        type: \"LOGIN\",\n        payload: res.data\n      });\n    }\n  }).catch(e => {//dispatch({ type: \"ERROR\", payload: e });\n  });\n};\n_c = Login;\nexport const signUp = async function (values, dispatch) {\n  axios({\n    method: \"post\",\n    url: \"signUp\",\n    data: {\n      details: values\n    }\n  }).then(res => {\n    console.log(res.data);\n  }).catch(e => {//dispatch({ type: \"ERROR\", payload: e });\n  });\n};\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport const profileUpdate = async function (userUploadData) {\n  const formData = new FormData();\n  if (userUploadData.file) formData.append(\"profile_image\", userUploadData.file);\n  if (userUploadData.bio) formData.append(\"profile_bio\", userUploadData.bio);\n  let base64 = await getBase64(userUploadData.file);\n  axios({\n    method: \"post\",\n    url: \"updateUserDetails\",\n    body: {\n      file: base64\n    },\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  }).then(res => {\n    console.log(res.data);\n  }).catch(e => {//dispatch({ type: \"ERROR\", payload: e });\n  });\n};\nexport const addBio = async function () {\n  alert(\"shmi\");\n};\nexport const getSome = async function () {\n  axios({\n    method: \"GET\",\n    url: \"/t\"\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/fixel/dashboard/src/Store/Actions.js"],"names":["axios","Login","values","dispatch","method","url","data","details","then","res","full_name","type","payload","catch","e","signUp","console","log","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","profileUpdate","userUploadData","formData","FormData","append","bio","base64","body","headers","addBio","alert","getSome"],"mappings":"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","sourcesContent":["import axios from \"../AxiosConfig/AxiosConfig\";\r\n\r\nexport const Login = async function (values, dispatch) {\r\n  axios({\r\n    method: \"POST\",\r\n    url: \"login\",\r\n    data: { details: values },\r\n  })\r\n    .then((res) => {\r\n      if (res && res.data && res.data.full_name) {\r\n        dispatch({ type: \"LOGIN\", payload: res.data });\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      //dispatch({ type: \"ERROR\", payload: e });\r\n    });\r\n};\r\n\r\nexport const signUp = async function (values, dispatch) {\r\n  axios({\r\n    method: \"post\",\r\n    url: \"signUp\",\r\n    data: { details: values },\r\n  })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n    })\r\n    .catch((e) => {\r\n      //dispatch({ type: \"ERROR\", payload: e });\r\n    });\r\n};\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n}\r\nexport const profileUpdate = async function (userUploadData) {\r\n  const formData = new FormData();\r\n  if (userUploadData.file)\r\n    formData.append(\"profile_image\", userUploadData.file);\r\n  if (userUploadData.bio) formData.append(\"profile_bio\", userUploadData.bio);\r\n  let base64 = await getBase64(userUploadData.file);\r\n  axios({\r\n    method: \"post\",\r\n    url: \"updateUserDetails\",\r\n    body: { file: base64 },\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n    })\r\n    .catch((e) => {\r\n      //dispatch({ type: \"ERROR\", payload: e });\r\n    });\r\n};\r\n\r\nexport const addBio = async function () {\r\n  alert(\"shmi\");\r\n};\r\n\r\nexport const getSome = async function () {\r\n  axios({\r\n    method: \"GET\",\r\n    url: \"/t\",\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}