{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\fixel\\\\dashboard\\\\src\\\\Components\\\\Main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Main.css\";\nimport Form from \"../Form/Form\";\nimport validations from \"../../Validations/Validations\";\nimport UserProfile from \"../UserProfile/UserProfile\";\nimport Toast from \"../Toast/Toast\";\nimport { useStore } from \"../../Store/Store\";\nimport { signUp, Login, confirmCode } from \"../../Store/Actions\";\nimport fixel_title from \"../../fixel_title.png\"; // screens: [signIn,login,profile,confirmationn]\n\nexport default function Main(props) {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useStore();\n  const {\n    user\n  } = state;\n  const [screen, setScreen] = useState(\"signIn\");\n  /* React.useEffect(() => {\r\n    if (user && user !== undefined && screen !== \"profile\")\r\n      setScreen(\"profile\");\r\n  }, [user]);*/\n\n  async function codeConfirmHandler(values) {\n    dispatch({\n      type: \"LOADING\",\n      payload: true\n    });\n    let handlerRes = await confirmCode(values, state.user.email, dispatch);\n    if (handlerRes && handlerRes > 0) setScreen(\"profile\");\n  }\n\n  async function loginHandler(values) {\n    dispatch({\n      type: \"LOADING\",\n      payload: true\n    });\n    let handlerRes = await Login(values, dispatch);\n    if (handlerRes && handlerRes > 0) setScreen(\"profile\");else if (handlerRes && handlerRes < -1) setScreen(\"confirmation\");\n  }\n\n  async function signUpHandler(values) {\n    dispatch({\n      type: \"LOADING\",\n      payload: true\n    });\n    let handlerRes = await signUp(values, dispatch);\n    if (handlerRes && handlerRes > 0) setScreen(\"confirmation\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth_container\",\n      children: [screen && screen === \"login\" && /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: values => loginHandler(values),\n        submitText: \"Login\",\n        footer: \"Create new account\",\n        onFooterHandler: () => {\n          setScreen(\"signIn\");\n        },\n        formLogo: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"authentication logo\",\n          className: \"authentication_logo\",\n          src: fixel_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this),\n        fields: {\n          email: \"\",\n          password: \"\"\n        },\n        elements: [{\n          id: \"email\",\n          type: \"input\",\n          title: \"Email\",\n          placeholder: \"Email\",\n          customClass: \"email\",\n          validate: v => validations.email(v.toString().toLowerCase()),\n          errorMsg: \"Email address is incorrect\"\n        }, {\n          id: \"password\",\n          type: \"input\",\n          title: \"Password\",\n          placeholder: \"password\",\n          customClass: \"password\",\n          validate: v => validations.password(v.toString().toLowerCase()),\n          errorMsg: \"Password has to be above 6 letters\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), screen && screen === \"signIn\" && /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: values => signUpHandler(values),\n        submitText: \"SignUp\",\n        footer: \"Already have account?\",\n        onFooterHandler: () => {\n          setScreen(\"login\");\n        },\n        formLogo: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"authlogo\",\n          className: \"authentication_logo\",\n          src: fixel_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this),\n        fields: {\n          email: \"\",\n          full_name: \"\",\n          password: \"\"\n        },\n        elements: [{\n          id: \"full_name\",\n          type: \"input\",\n          title: \"Full Name\",\n          placeholder: \"full name\",\n          customClass: \"full_name\",\n          validate: v => validations.full_name(v.toString().toLowerCase()),\n          errorMsg: \"Full name has to be above 2 letters\"\n        }, {\n          id: \"email\",\n          type: \"input\",\n          title: \"Email\",\n          placeholder: \"Email\",\n          customClass: \"email\",\n          validate: v => validations.email(v.toString().toLowerCase()),\n          errorMsg: \"Email address is incorrect\"\n        }, {\n          id: \"password\",\n          type: \"input\",\n          title: \"Password\",\n          placeholder: \"password\",\n          customClass: \"password\",\n          validate: v => validations.password(v.toString().toLowerCase()),\n          errorMsg: \"Password has to be above 6 letters\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), screen && screen === \"confirmation\" && /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: values => codeConfirmHandler(values),\n        submitText: \"Confirm\",\n        formTitle: \"Please confirm email code\",\n        fields: {\n          user_confirmaton_code: \"\"\n        },\n        elements: [{\n          id: \"user_confirmaton_code\",\n          type: \"input\",\n          title: \"Confirmation code\",\n          placeholder: \"code\",\n          customClass: \"confirmation_code\",\n          validate: v => true,\n          errorMsg: \"Incorrect confirmation code typed :(\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), screen && screen === \"profile\" && /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 42\n    }, this), state.globalError && state.globalError !== -1 && /*#__PURE__*/_jsxDEV(Toast, {\n      error: state.globalError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"TxEzm5NiLOvFS4s+RP3FyTQXbls=\", false, function () {\n  return [useStore];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/fixel/dashboard/src/Components/Main/Main.js"],"names":["React","useState","Form","validations","UserProfile","Toast","useStore","signUp","Login","confirmCode","fixel_title","Main","props","state","dispatch","user","screen","setScreen","codeConfirmHandler","values","type","payload","handlerRes","email","loginHandler","signUpHandler","password","id","title","placeholder","customClass","validate","v","toString","toLowerCase","errorMsg","full_name","user_confirmaton_code","globalError"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Main.css\";\r\nimport Form from \"../Form/Form\";\r\nimport validations from \"../../Validations/Validations\";\r\nimport UserProfile from \"../UserProfile/UserProfile\";\r\nimport Toast from \"../Toast/Toast\";\r\nimport { useStore } from \"../../Store/Store\";\r\nimport { signUp, Login, confirmCode } from \"../../Store/Actions\";\r\n\r\nimport fixel_title from \"../../fixel_title.png\";\r\n// screens: [signIn,login,profile,confirmationn]\r\nexport default function Main(props) {\r\n  const { state, dispatch } = useStore();\r\n  const { user } = state;\r\n  const [screen, setScreen] = useState(\"signIn\");\r\n  /* React.useEffect(() => {\r\n    if (user && user !== undefined && screen !== \"profile\")\r\n      setScreen(\"profile\");\r\n  }, [user]);*/\r\n\r\n  async function codeConfirmHandler(values) {\r\n    dispatch({ type: \"LOADING\", payload: true });\r\n    let handlerRes = await confirmCode(values, state.user.email, dispatch);\r\n    if (handlerRes && handlerRes > 0) setScreen(\"profile\");\r\n  }\r\n  async function loginHandler(values) {\r\n    dispatch({ type: \"LOADING\", payload: true });\r\n    let handlerRes = await Login(values, dispatch);\r\n    if (handlerRes && handlerRes > 0) setScreen(\"profile\");\r\n    else if (handlerRes && handlerRes < -1) setScreen(\"confirmation\");\r\n  }\r\n  async function signUpHandler(values) {\r\n    dispatch({ type: \"LOADING\", payload: true });\r\n    let handlerRes = await signUp(values, dispatch);\r\n    if (handlerRes && handlerRes > 0) setScreen(\"confirmation\");\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"auth_container\">\r\n        {screen && screen === \"login\" && (\r\n          <Form\r\n            onSubmit={(values) => loginHandler(values)}\r\n            submitText=\"Login\"\r\n            footer=\"Create new account\"\r\n            onFooterHandler={() => {\r\n              setScreen(\"signIn\");\r\n            }}\r\n            formLogo={\r\n              <img\r\n                alt=\"authentication logo\"\r\n                className=\"authentication_logo\"\r\n                src={fixel_title}\r\n              />\r\n            }\r\n            fields={{ email: \"\", password: \"\" }}\r\n            elements={[\r\n              {\r\n                id: \"email\",\r\n                type: \"input\",\r\n                title: \"Email\",\r\n                placeholder: \"Email\",\r\n                customClass: \"email\",\r\n                validate: (v) => validations.email(v.toString().toLowerCase()),\r\n                errorMsg: \"Email address is incorrect\",\r\n              },\r\n              {\r\n                id: \"password\",\r\n                type: \"input\",\r\n                title: \"Password\",\r\n                placeholder: \"password\",\r\n                customClass: \"password\",\r\n                validate: (v) =>\r\n                  validations.password(v.toString().toLowerCase()),\r\n                errorMsg: \"Password has to be above 6 letters\",\r\n              },\r\n            ]}\r\n          />\r\n        )}\r\n        {screen && screen === \"signIn\" && (\r\n          <Form\r\n            onSubmit={(values) => signUpHandler(values)}\r\n            submitText=\"SignUp\"\r\n            footer=\"Already have account?\"\r\n            onFooterHandler={() => {\r\n              setScreen(\"login\");\r\n            }}\r\n            formLogo={\r\n              <img\r\n                alt=\"authlogo\"\r\n                className=\"authentication_logo\"\r\n                src={fixel_title}\r\n              />\r\n            }\r\n            fields={{ email: \"\", full_name: \"\", password: \"\" }}\r\n            elements={[\r\n              {\r\n                id: \"full_name\",\r\n                type: \"input\",\r\n                title: \"Full Name\",\r\n                placeholder: \"full name\",\r\n                customClass: \"full_name\",\r\n                validate: (v) =>\r\n                  validations.full_name(v.toString().toLowerCase()),\r\n                errorMsg: \"Full name has to be above 2 letters\",\r\n              },\r\n\r\n              {\r\n                id: \"email\",\r\n                type: \"input\",\r\n                title: \"Email\",\r\n                placeholder: \"Email\",\r\n                customClass: \"email\",\r\n                validate: (v) => validations.email(v.toString().toLowerCase()),\r\n                errorMsg: \"Email address is incorrect\",\r\n              },\r\n              {\r\n                id: \"password\",\r\n                type: \"input\",\r\n                title: \"Password\",\r\n                placeholder: \"password\",\r\n                customClass: \"password\",\r\n                validate: (v) =>\r\n                  validations.password(v.toString().toLowerCase()),\r\n                errorMsg: \"Password has to be above 6 letters\",\r\n              },\r\n            ]}\r\n          />\r\n        )}\r\n        {screen && screen === \"confirmation\" && (\r\n          <Form\r\n            onSubmit={(values) => codeConfirmHandler(values)}\r\n            submitText=\"Confirm\"\r\n            formTitle={\"Please confirm email code\"}\r\n            fields={{ user_confirmaton_code: \"\" }}\r\n            elements={[\r\n              {\r\n                id: \"user_confirmaton_code\",\r\n                type: \"input\",\r\n                title: \"Confirmation code\",\r\n                placeholder: \"code\",\r\n                customClass: \"confirmation_code\",\r\n                validate: (v) => true,\r\n                errorMsg: \"Incorrect confirmation code typed :(\",\r\n              },\r\n            ]}\r\n          />\r\n        )}\r\n      </div>\r\n      {screen && screen === \"profile\" && <UserProfile />}\r\n      {state.globalError && state.globalError !== -1 && (\r\n        <Toast error={state.globalError} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}